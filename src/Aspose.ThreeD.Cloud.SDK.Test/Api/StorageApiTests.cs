/* 
 * Aspose.ThreeD Cloud API Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Aspose.ThreeD.Cloud.SDK.Client;
using Aspose.ThreeD.Cloud.SDK.Api;
using Aspose.ThreeD.Cloud.SDK.Model;

namespace Aspose.ThreeD.Cloud.SDK.Test
{
    /// <summary>
    ///  Class for testing StorageApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StorageApiTests :ThreeDBaseTest
    {
        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }
     
        /// <summary>
        /// GetDiscUsage Test
        /* {
                "UsedSize": 0,
                "TotalSize": 0
            }
        */
        /// </summary>
        [Test]
        public void GetDiscUsageTest()
        {
            string storageName = "First Storage";
            var response = storageApi.GetDiscUsage(storageName);
            Assert.IsInstanceOf<DiscUsage> (response, "response is DiscUsage");
        }

        /// <summary>
        ///  Check wether the specified file or folder is FileVersions
        /// </summary>
        [Test]
        public void GetFileVersionsTest()
        {
            string path = @"3DTest\Aspose.pdf";
            string storageName = null;         
            var response = storageApi.GetFileVersions(path, storageName);
            Assert.IsInstanceOf<FileVersions> (response, "response is FileVersions");
        }

        /// <summary>
        ///  Check wether the specified object is exists or not
        /// </summary>
        [Test]
        public void ObjectExistsTest()
        {
            string path = @"3DTest\Empty.pdf";
            string storageName = null;
            string versionId = null;
            var response = storageApi.ObjectExists(path, storageName, versionId);
            Assert.IsInstanceOf<ObjectExist>(response, "response is ObjectExists");
            Assert.True(response.Exists);
            Assert.False(response.IsFolder);
        }

        /// <summary>
        /// Check wether the specified storage is exists or not
        /// </summary>
        [Test]
        public void StorageExistsTest()
        {
            /* NOTE: here storageName can not be null*/
            string storageName = "First Storage";/*here can not be null*/
            var response = storageApi.StorageExists(storageName);
            Assert.IsInstanceOf<StorageExist> (response, "response is StorageExist");
            Assert.True(response.Exists);
        }      
    }

}
